<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Continent_table)' inline='true' name='federated.0zh2p9v1dlf19m19vny0m1lb1te0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Continent_table' name='excel-direct.1ovczke0hi8jhg1er6cv70m37ey1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/reube/OneDrive/Desktop/Data Analyst/COVID/Continent_table.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ovczke0hi8jhg1er6cv70m37ey1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='total_continent_deaths' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ovczke0hi8jhg1er6cv70m37ey1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='total_continent_deaths' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9026E6DDC1EF4F5082A9DCFB579BCCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_continent_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_continent_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_continent_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9026E6DDC1EF4F5082A9DCFB579BCCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9026E6DDC1EF4F5082A9DCFB579BCCA9]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Total Continent Deaths' datatype='integer' name='[total_continent_deaths]' role='measure' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/reube/OneDrive/Desktop/Data Analyst/COVID/#TableauTemp_10nrmhq0f6p5r71g267z415cxawl.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/29/2024 03:12:32 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RNZ_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9026E6DDC1EF4F5082A9DCFB579BCCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_continent_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_continent_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_continent_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9026E6DDC1EF4F5082A9DCFB579BCCA9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;New Zealand&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9026E6DDC1EF4F5082A9DCFB579BCCA9'>
            <properties context=''>
              <relation connection='excel-direct.1ovczke0hi8jhg1er6cv70m37ey1' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='total_continent_deaths' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (country_infection_date)' inline='true' name='federated.1wzfuak14oomvv1coh67f0go5234' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_infection_date' name='excel-direct.19bd7vc135h3z21fy43k30vnys3f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/reube/OneDrive/Desktop/Data Analyst/COVID/country_infection_date.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.19bd7vc135h3z21fy43k30vnys3f' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='highest_total_cases' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='real' name='case_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.19bd7vc135h3z21fy43k30vnys3f' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='highest_total_cases' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='real' name='case_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4060067549424047AD229383259C165E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4060067549424047AD229383259C165E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4060067549424047AD229383259C165E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4060067549424047AD229383259C165E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[case_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>case_percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4060067549424047AD229383259C165E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4060067549424047AD229383259C165E]' role='measure' type='quantitative' />
      <column caption='Case Percentage' datatype='real' name='[case_percentage]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Total Cases' datatype='integer' name='[highest_total_cases]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='Max' name='[max:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;International&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;European Union&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Timor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Macao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;World&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;New Zealand&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4060067549424047AD229383259C165E'>
            <properties context=''>
              <relation connection='excel-direct.19bd7vc135h3z21fy43k30vnys3f' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='highest_total_cases' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                  <column datatype='real' name='case_percentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau_t1)' inline='true' name='federated.12mip711oaygqn1gk91910f9hgt2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau_t1' name='excel-direct.10qe6wd1rzdyhc15sl17n0wbn9u3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/reube/OneDrive/Desktop/Data Analyst/COVID/tableau_t1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.10qe6wd1rzdyhc15sl17n0wbn9u3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_new_cases' ordinal='0' />
            <column datatype='integer' name='total_new_deaths' ordinal='1' />
            <column datatype='real' name='total_death_proportion' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.10qe6wd1rzdyhc15sl17n0wbn9u3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_new_cases' ordinal='0' />
            <column datatype='integer' name='total_new_deaths' ordinal='1' />
            <column datatype='real' name='total_death_proportion' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_new_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B9887BE545341E7AE97246442A1707F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_new_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B9887BE545341E7AE97246442A1707F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death_proportion</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_death_proportion]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_death_proportion</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B9887BE545341E7AE97246442A1707F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_death_proportion:qk]&quot;' value='Death Proportion' />
          <alias key='&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_new_cases:qk]&quot;' value='Total Cases' />
          <alias key='&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_new_deaths:qk]&quot;' value='Total Deaths' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9B9887BE545341E7AE97246442A1707F]' role='measure' type='quantitative' />
      <column caption='Total Death Proportion' datatype='real' name='[total_death_proportion]' role='measure' type='quantitative' />
      <column caption='Total New Cases' datatype='integer' name='[total_new_cases]' role='measure' type='quantitative' />
      <column caption='Total New Deaths' datatype='integer' name='[total_new_deaths]' role='measure' type='quantitative' />
      <column-instance column='[total_death_proportion]' derivation='Sum' name='[sum:total_death_proportion:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_new_cases]' derivation='Sum' name='[sum:total_new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_new_deaths]' derivation='Sum' name='[sum:total_new_deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;New Zealand&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9B9887BE545341E7AE97246442A1707F'>
            <properties context=''>
              <relation connection='excel-direct.10qe6wd1rzdyhc15sl17n0wbn9u3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_new_cases' ordinal='0' />
                  <column datatype='integer' name='total_new_deaths' ordinal='1' />
                  <column datatype='real' name='total_death_proportion' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (country_proportion)' inline='true' name='federated.190ztgq01v4dfy14cm2y104zp7pb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_proportion' name='excel-direct.1io3hyu0b7t9qw1cmwlpl1feb6qd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/reube/OneDrive/Desktop/Data Analyst/COVID/country_proportion.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1io3hyu0b7t9qw1cmwlpl1feb6qd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='highest_total_cases' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
            <column datatype='real' name='case_percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1io3hyu0b7t9qw1cmwlpl1feb6qd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='highest_total_cases' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
            <column datatype='real' name='case_percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNZ_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[case_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>case_percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]' role='measure' type='quantitative' />
      <column caption='Case Percentage' datatype='real' name='[case_percentage]' role='measure' type='quantitative' />
      <column caption='Highest Total Cases' datatype='integer' name='[highest_total_cases]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/reube/AppData/Local/Temp/TableauTemp/#TableauTemp_1562l2u0u4ltuo12i6i240h1lsnb.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/10/2024 06:46:34 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RNZ_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_total_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>case_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[case_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>case_percentage</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;New Zealand&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_53F18C3BF5D242FEAF6CBEB082FAC79E'>
            <properties context=''>
              <relation connection='excel-direct.1io3hyu0b7t9qw1cmwlpl1feb6qd' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='highest_total_cases' ordinal='1' />
                  <column datatype='integer' name='population' ordinal='2' />
                  <column datatype='real' name='case_percentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau_t1)' name='federated.12mip711oaygqn1gk91910f9hgt2' />
          </datasources>
          <datasource-dependencies datasource='federated.12mip711oaygqn1gk91910f9hgt2'>
            <column-instance column='[total_death_proportion]' derivation='Sum' name='[sum:total_death_proportion:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_new_cases]' derivation='Sum' name='[sum:total_new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_new_deaths]' derivation='Sum' name='[sum:total_new_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Proportion' datatype='real' name='[total_death_proportion]' role='measure' type='quantitative' />
            <column caption='Total New Cases' datatype='integer' name='[total_new_cases]' role='measure' type='quantitative' />
            <column caption='Total New Deaths' datatype='integer' name='[total_new_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mip711oaygqn1gk91910f9hgt2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_death_proportion:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_new_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_new_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.12mip711oaygqn1gk91910f9hgt2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_new_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_new_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_death_proportion:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.12mip711oaygqn1gk91910f9hgt2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12mip711oaygqn1gk91910f9hgt2].[:Measure Names]' value='172' />
            <format attr='text-format' field='[federated.12mip711oaygqn1gk91910f9hgt2].[sum:total_death_proportion:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.12mip711oaygqn1gk91910f9hgt2].[Multiple Values]' value='' />
            <format attr='height' value='101' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='height' field='[federated.12mip711oaygqn1gk91910f9hgt2].[:Measure Names]' value='44' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.12mip711oaygqn1gk91910f9hgt2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1104972362518311' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.12mip711oaygqn1gk91910f9hgt2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B71FC385-943D-499B-9EDD-685349A941D7}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Continent_table)' name='federated.0zh2p9v1dlf19m19vny0m1lb1te0' />
          </datasources>
          <datasource-dependencies datasource='federated.0zh2p9v1dlf19m19vny0m1lb1te0'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_continent_deaths]' derivation='Sum' name='[sum:total_continent_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Continent Deaths' datatype='integer' name='[total_continent_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0zh2p9v1dlf19m19vny0m1lb1te0].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zh2p9v1dlf19m19vny0m1lb1te0].[none:continent:nk]' value='142' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zh2p9v1dlf19m19vny0m1lb1te0].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6151933670043945' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zh2p9v1dlf19m19vny0m1lb1te0].[sum:total_continent_deaths:qk]</rows>
        <cols>[federated.0zh2p9v1dlf19m19vny0m1lb1te0].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{DED2E118-33BB-4853-BC7C-8EC0B0642514}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of Population Infected By Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (country_proportion)' name='federated.190ztgq01v4dfy14cm2y104zp7pb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.190ztgq01v4dfy14cm2y104zp7pb'>
            <column caption='Case Percentage' datatype='real' name='[case_percentage]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[case_percentage]' derivation='Sum' name='[sum:case_percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.190ztgq01v4dfy14cm2y104zp7pb].[Longitude (generated)]' field-type='quantitative' max='23486641.119223412' min='-20910649.436786659' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.190ztgq01v4dfy14cm2y104zp7pb].[Latitude (generated)]' field-type='quantitative' max='15109444.619984161' min='-9285323.2484576106' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.190ztgq01v4dfy14cm2y104zp7pb].[sum:case_percentage:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.190ztgq01v4dfy14cm2y104zp7pb].[sum:case_percentage:qk]' value='Infected Proportion'>
              <formatted-text>
                <run>Infected Proportion</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.190ztgq01v4dfy14cm2y104zp7pb].[none:location:nk]' />
              <color column='[federated.190ztgq01v4dfy14cm2y104zp7pb].[sum:case_percentage:qk]' />
              <geometry column='[federated.190ztgq01v4dfy14cm2y104zp7pb].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.190ztgq01v4dfy14cm2y104zp7pb].[Latitude (generated)]</rows>
        <cols>[federated.190ztgq01v4dfy14cm2y104zp7pb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2BA5B142-184F-4EBD-B17B-4CF3B3FD345E}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (country_infection_date)' name='federated.1wzfuak14oomvv1coh67f0go5234' />
          </datasources>
          <datasource-dependencies datasource='federated.1wzfuak14oomvv1coh67f0go5234'>
            <column-instance column='[case_percentage]' derivation='Avg' name='[avg:case_percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Case Percentage' datatype='real' name='[case_percentage]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wzfuak14oomvv1coh67f0go5234].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1wzfuak14oomvv1coh67f0go5234].[tmn:date:qk]' included-values='in-range'>
            <min>#2020-03-01 00:00:00#</min>
            <max>#2021-04-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1wzfuak14oomvv1coh67f0go5234].[none:location:nk]</column>
            <column>[federated.1wzfuak14oomvv1coh67f0go5234].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1wzfuak14oomvv1coh67f0go5234].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wzfuak14oomvv1coh67f0go5234].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='985' />
                <format attr='maxwidth' value='985' />
                <format attr='minheight' value='614' />
                <format attr='maxheight' value='614' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wzfuak14oomvv1coh67f0go5234].[avg:case_percentage:qk]</rows>
        <cols>[federated.1wzfuak14oomvv1coh67f0go5234].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{831038E4-4BFB-45B7-8589-F112DBDA8812}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98152' id='8' param='horz' type-v2='layout-flow' w='99002' x='499' y='924'>
            <zone h='98152' id='6' type-v2='layout-basic' w='99002' x='499' y='924'>
              <zone h='24017' id='3' name='Sheet 1' w='52738' x='499' y='924'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37067' id='5' name='Sheet 2' w='52738' x='499' y='24941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55080' id='10' name='Sheet 3' w='46264' x='53237' y='924'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37068' id='12' name='Sheet 4' w='89716' x='499' y='62008'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='190' h='6004' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='46264' x='53237' y='56004'>
                <zone fixed-size='200' h='6004' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='1' param='[federated.190ztgq01v4dfy14cm2y104zp7pb].[sum:case_percentage:qk]' type-v2='color' w='46264' x='53237' y='56004'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='37068' id='13' name='Sheet 4' pane-specification-id='1' param='[federated.1wzfuak14oomvv1coh67f0go5234].[none:location:nk]' type-v2='color' w='9286' x='90215' y='62008'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98152' id='16' param='vert' type-v2='layout-flow' w='99002' x='499' y='924'>
                <zone fixed-size='185' h='24017' id='3' is-fixed='true' name='Sheet 1' w='52738' x='499' y='924'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55080' id='10' is-fixed='true' name='Sheet 3' w='46264' x='53237' y='924'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='200' h='6004' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.190ztgq01v4dfy14cm2y104zp7pb].[sum:case_percentage:qk]' type-v2='color' w='46264' x='53237' y='56004'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37067' id='5' is-fixed='true' name='Sheet 2' w='52738' x='499' y='24941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37068' id='12' is-fixed='true' name='Sheet 4' w='89716' x='499' y='62008'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37068' id='13' name='Sheet 4' pane-specification-id='1' param='[federated.1wzfuak14oomvv1coh67f0go5234].[none:location:nk]' type-v2='color' w='9286' x='90215' y='62008'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C1770E33-1BF9-418E-9C13-9ABD8A46C8B9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='136'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='184'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mip711oaygqn1gk91910f9hgt2].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABEAA7D7-01C1-4488-9E04-1CC9FBDA5A81}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zh2p9v1dlf19m19vny0m1lb1te0].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zh2p9v1dlf19m19vny0m1lb1te0].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2BB7309-ECCD-4A55-914C-D00B675D2563}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.190ztgq01v4dfy14cm2y104zp7pb].[sum:case_percentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.190ztgq01v4dfy14cm2y104zp7pb].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1269C725-B528-4ABB-836A-B29A556353A8}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='156'>
            <card pane-specification-id='1' param='[federated.1wzfuak14oomvv1coh67f0go5234].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wzfuak14oomvv1coh67f0go5234].[none:location:nk]</field>
            <field>[federated.1wzfuak14oomvv1coh67f0go5234].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E1B1C24B-C9AC-4102-B0A4-1138757DD74B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1wzfuak14oomvv1coh67f0go5234].[none:location:nk]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='16' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{2DA24997-BEDC-4844-999C-6DE77676CEC2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      P5vH1T2/kdLYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='149' name='Sheet 1' width='192'>
      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
      ODfR11QDeSTH/UA9YLxYQs6363jzL/9p2eH3n/La+9tIOfVj45gde+ydOuOs4+pQy30oQzyh
      +J/LWfPtSWou75K6ak5n7OJvH35FCUDBTlb9bh3/OVF0uY0GOycXnDs0fidG85fOTJIrwC2h
      YdDjrxASv5zY+FUsjV/V7D0tvk8uYWqz4Yem/2D8tPs4lriaF2avbnzx8n0AvxHBaKPjiP3D
      vKv3CHDEpbsTtJgPmMkpmKfefpSS324lN2olL0e1fNv7yUksBDyGj8b9s1xyP1/Ews+v1u7S
      3QmouLqBsYaT+3bx3r4NrXakxTcshMbrnC+/CJtC9Iq9JKwOI2F1q6Z9wpgJQC2ladtZl7ad
      da2adJ42hcE3YQ4gV4BbxSmIZ9et4YmJ/bjn8mnHwX0YM1//jLfme7dchek+i9+sCuP+ezs2
      nqG0HXFxahzrdxj/G1Y8OQZXR2icYM7k2XXbWD7L1erSOg54ipX/WMMTEwfi0vFycY5d8Bo6
      j5mjXBp/7vMYb7wxk94dtTRORscw7w9b+PNzrQYh9z/Ney/NY5B3Fxwuv+TQeSDBi1fz+tyr
      w7yOo15j9Ue/JnjA1Xbajt3pNzGMV5c92Hgn/d4HeemtMIIHdG/6zrQdezLowRX88YUbH/8D
      2LT3n+TJP44rfs7kCiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIg
      VE0CIFRNAiBUTQIgVK3dvxBTnpdzK+oQ4rZoNwA1NTW3og4hbtj48eMBiImJMXsbGQIJVZMA
      CFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhV
      kwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMA
      CFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFWTAAhVkwAIVZMACFVr93+K
      vx0URaGwsJDw8HC0Wi2LFi3C0dHRZPucnBw2bdpEfX29yTa9evW6bj+KonDkyBGioqI4d+4c
      iqLg4uLClClTGDZsGLa2lp8jrKlny5YtZGRkmNW/j48PYWFhODg4mGxjMBjYtGkTJ0+exNnZ
      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
      TQIgVO3/AZNhSUR8izgmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
